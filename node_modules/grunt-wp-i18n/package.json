{
  "name": "grunt-wp-i18n",
  "description": "Internationalize WordPress themes and plugins.",
  "version": "0.5.0",
  "homepage": "https://github.com/blazersix/grunt-wp-i18n",
  "author": {
    "name": "Brady Vercher",
    "email": "brady@blazersix.com",
    "url": "http://www.blazersix.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/blazersix/grunt-wp-i18n.git"
  },
  "bugs": {
    "url": "https://github.com/blazersix/grunt-wp-i18n/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/blazersix/grunt-wp-i18n/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "async": "~0.2.10",
    "gettext-parser": "~0.2.0",
    "grunt": "~0.4.2",
    "underscore": "~1.5.2",
    "underscore.string": "~2.3.3"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-nodeunit": "~0.2.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "wordpress",
    "i18n",
    "translation"
  ],
  "readme": "# grunt-wp-i18n [![Build Status](https://travis-ci.org/blazersix/grunt-wp-i18n.png?branch=develop)](https://travis-ci.org/blazersix/grunt-wp-i18n)\r\n\r\n> Internationalize WordPress plugins and themes.\r\n\r\nWordPress has a robust suite of tools to help internationalize plugins and themes. This plugin brings the power of those existing tools to Grunt in order to make it easy for you to automate the i18n process and make your projects more accessible to an international audience.\r\n\r\nIf you're not familiar with i18n concepts, read the Internationalization entries in the [Plugin Developer Handbook](http://make.wordpress.org/docs/plugin-developer-handbook/plugin-components/internationalization/) or [Theme Developer Handbook](http://make.wordpress.org/docs/theme-developer-handbook/theme-functionality/internationalization/).\r\n\r\n\r\n## Getting Started\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-wp-i18n --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks( 'grunt-wp-i18n' );\r\n```\r\n\r\n### Requirements\r\n\r\n* This plugin requires Grunt `~0.4.0`.\r\n* [PHP CLI](http://www.php.net/manual/en/features.commandline.introduction.php) must be in your system path.\r\n\r\n\r\n## Tasks\r\n\r\nThis plugin consists of two configurable tasks:\r\n\r\n* [makepot](docs/makepot.md) - Generate a POT file.\r\n* [addtextdomain](docs/addtextdomain.md) - Add a text domain to gettext functions.\r\n\r\n\r\n## Local Config\r\n\r\nOptions defined in Gruntfile.js are shared between anyone working on a project, however, developers may wish to save their i18n tools in a custom location. To do so, add the `i18nToolsPath` in a `config.json` file in the project directory. This file may contain other local configuration options or sensitive data, so it should not be checked in to version control.\r\n\r\n```json\r\n{\r\n    \"i18nToolsPath\": \"/path/to/i18n-tools/\"\r\n}\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-wp-i18n@0.5.0",
  "_from": "grunt-wp-i18n@~0.5.0"
}
