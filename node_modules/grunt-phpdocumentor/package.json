{
  "name": "grunt-phpdocumentor",
  "description": "Runs the PHPDocumentor documentation generator tool.",
  "version": "0.4.1",
  "homepage": "https://github.com/gomoob/grunt-phpdocumentor",
  "author": {
    "name": "Baptiste Gaillard",
    "email": "baptiste.gaillard@gomoob.com",
    "url": "http://www.gomoob.com"
  },
  "contributors": [
    {
      "name": "Mitermayer Reis",
      "email": "mitermayer.reis@gmail.com",
      "url": "http://job.mitermayer.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/gomoob/grunt-phpdocumentor"
  },
  "bugs": {
    "url": "https://github.com/gomoob/grunt-phpdocumentor/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gomoob/grunt-phpdocumentor/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-phpdocumentor\r\n\r\n> Runs the PHPDocumentor documentation generator tool.\r\n\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n\r\nThis build include phpDocumentor version 2.2.0, other versions can be specified by the `phar` option \r\n\r\nThis plugin runs the command : ```phpdoc -d dir -t target```.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-phpdocumentor --save-dev\r\n```\r\n\r\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-phpdocumentor');\r\n```\r\n\r\n## The \"phpdocumentor\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `phpdocumentor` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n    phpdocumentor: {\r\n        dist: {\r\n            options: {\r\n\t            directory : './',\r\n                target : 'docs'\r\n            }\r\n        }\r\n    }\r\n})\r\n```\r\n\r\nYou can also use many Grunt targets if you have several phpDocumentor documentations to generate. \r\n\r\n```js\r\ngrunt.initConfig({\r\n    phpdocumentor: {\r\n\r\n        // Place here Task level options (i.e common to all your phpDocumentor targets)\r\n        options : {\r\n            command : 'run',\r\n        },\r\n\r\n        // Grunt Target used to generate a first documentation\r\n        first_api_documentation : {\r\n            options: {\r\n                directory : 'src/first_api',\r\n                target : 'docs/first_api_documentation'\r\n            }\r\n        },\r\n\r\n        // Grunt target used to generate a second documentation\r\n        second_api_documentation : {\r\n            options : {\r\n                directory : 'src/second_api',\r\n                target : 'docs/second_api_documentation'\r\n            }\r\n        },\r\n        \r\n        // Sample target used to display the phpDocumentor help\r\n        display_help : {\r\n            options : {\r\n                command : 'help'\r\n            }\r\n        }\r\n\r\n    }\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.bin( optional )\r\nType: `String`\r\nDefault value: `phpdoc`\r\n\r\nPath to the phpdoc executable, by default it will use the one that come with task. It is located on the bin folder.\r\n\r\n**WARNING** : We kept this option documented here only for versions `0.1.0` and `0.3.0` of the plugin. This option has \r\nbeen removed in version `0.4.0` because it was not portable across operating systems. \r\n\r\n#### options.command ( optional )\r\nType : `String`\r\nDefault value: `run`\r\n\r\nThe name of the phpDocumentor command to execute, the following phpDocumentor commands are available in phpDocumentor : \r\n\r\n * `help`              : Displays help for a command\r\n * `list`              : Lists commands\r\n * `parse`             : Creates a structure file from your source code\r\n * `run`               : Parses and transforms the given files to a specified location\r\n * `transform`         : Converts the PHPDocumentor structure file to documentation\r\n * `project:parse`     : Creates a structure file from your source code\r\n * `project:run`       : Parses and transforms the given files to a specified location\r\n * `project:transform` : Converts the PHPDocumentor structure file to documentation\r\n * `template:list`     : Displays a listing of all available templates in phpDocumentor\r\n\r\n**WARNING** : All the phpDocumentor commands can be called using the plugin, but for now you can only use the \r\nphpDocumentor `[-t|--target[=\"...\"]]` and `[-d|--directory[=\"...\"]]` command line options which are not sufficient to \r\nmake the `transform` and `project:transform` correctly work.\r\n\r\n#### options.directory( optional )\r\nType: `String`\r\nDefault value: `./`\r\n\r\nComma-separated list of directories to (recursively) parse (multiple values allowed). It will default to the folder \r\nwhere Gruntfile is located.\r\n\r\n#### options.phar( optional )\r\nType: `String`\r\nDefault value: undefined\r\n\r\nThis option is not integrated in phpDocumentor tool and is specific to the plugin. The purpose of this option is to allow you to provide a path to a custom phpDocumentor PHAR file or to indicate to the plugin to use the `phpdoc` command available in your system.\r\n\r\nIf this option is not specified then the plugin will automatically use the integrated phpDocumentor PHAR file.\r\n\r\nIf you want to provide a path to a custom PHAR file you can provide it as a string : \r\n\r\n```js\r\ngrunt.initConfig({\r\n  phpdocumentor: {\r\n    dist: {\r\n        phar : 'documentation_tools/phpDocumentor.phar'\r\n    }             \r\n  },\r\n})\r\n```\r\n\r\nIf you want to use the `phpdoc` command which is available on you system instead then you can the `null` value to the `phar` option :\r\n\r\n```js\r\ngrunt.initConfig({\r\n  phpdocumentor: {\r\n    dist: {\r\n        phar : null\r\n    }             \r\n  },\r\n})\r\n```\r\n\r\n#### options.target( optional )\r\nType: `String`\r\nDefault value: `docs`\r\n\r\nPath where to store the generated output. It will default to a folder named 'docs' \r\n\r\n### Usage Examples\r\n\r\n```grunt phpdocumentor```\r\n\r\n## Release History\r\n\r\n### 0.4.1\r\n * Fix a documentation problem, the `options` object was not used in the configuration sample.\r\n * Document the use of the `command` option\r\n * Describe how to use the plugin with Task Level options\r\n * Describe how to use the plugin with multiple phpdocumentor targets\r\n * Implement unit tests to run all the phpDocumentor commands (except the `transform` and `project:transform` commands\r\n\r\n### 0.4.0\r\n \r\n * **BREAKING CHANGE, WARNING**: The `bin` option has been deleted and replaced by the `phar` option, if `null` is passed to the `phar` option then the plugin uses the `phpdoc` command available, if the `phar` option is `undefined` then the plugin uses the packaged phpDocumentor PHAR, if the `phar` option is not `null` and not `undefined` then it express a path to a phpDocumentor PHAR file on the file system\r\n * Add more robust unit tests\r\n * The unit tests are executed on the `develop` branch with the GoMoob continuous integration server each time the source code is updated on this branch\r\n * Now the plugin inspects the `[Exception]` string in the phpDocumentor output to know if a phpDocumentor exception has been encountered and make the Grunt task fail\r\n * Add the build with grunt badge to the README.MD file\r\n * Global documentation improvements\r\n * Add lot of comments in the plugin code\r\n * The `bin\\phpdoc` bash script has been deleted because bash is not installed on all UNIX platforms and because using a bash script is not portable across platforms\r\n * Upgrade the phpDocumentor PHAR to version 2.2.0 of phpDocumentor\r\n * Remove the use of the loadash `_.extend()` function and replace it with the standard Grunt `task.options()` function \r\n * Now the plugin checks if PHP CLI is available at command line\r\n * Global refactorings\r\n * Begin to support the execution of the `help`, `parse`, `project:parse`, `transform`, `project:transform`, `list`, \r\n   `template:list` commands\r\n\r\n### 0.3.0\r\n\r\n * Including ```phpDocumentor version 2.0.0a12``` on the bin, giving default to all options\r\n\r\n### 0.1.0\r\n\r\n * First release\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-phpdocumentor@0.4.1",
  "_from": "grunt-phpdocumentor@*"
}
